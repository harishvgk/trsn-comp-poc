{"version":3,"file":"dev.any-my-lib-01.mjs","sources":["../../../projects/my-lib/src/lib/my-lib.component.ts","../../../projects/my-lib/src/shared/shared.module.ts","../../../projects/my-lib/src/lib/lib-02/lib-02.component.ts","../../../projects/my-lib/src/lib/lib-02/lib-02.component.html","../../../projects/my-lib/src/lib/lib-02/lib-02.service.ts","../../../projects/my-lib/src/public-api.ts","../../../projects/my-lib/src/dev.any-my-lib-01.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-my-lib',\n  standalone: true,\n  imports: [],\n  template: `\n    <p style=\"background-color: coral;\">\n      Component 01 from library rendered with html tags as string input\n    </p>\n  `,\n  styles: ``\n})\nexport class MyLibComponent {\n\n}\n","// src/shared/shared.module.ts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import 'my-lib/src/shared/styles/common.scss'; // Import your SCSS file\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  exports: []  // Initially leave exports empty\n})\nexport class SharedModule { }","import { Component, OnInit } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\n// Import Axios (Optional)\nimport get from 'axios';  // Import only the 'get' method\nimport { HttpErrorResponse } from '@angular/common/http';  // Import HttpErrorResponse\nimport { SharedModule } from '../../shared/shared.module';\n\ninterface MyResponse {\n  // Define the structure of the expected response data\n  name: string;\n  description: string;\n}\n\n@Component({\n  selector: 'lib-lib-02',\n  standalone: true,\n  imports: [SharedModule],\ntemplateUrl: './lib-02.component.html',\n  styleUrl: './lib-02.component.css'\n})\nexport class Lib02Component implements OnInit {\n  apiUrl = 'https://catfact.ninja/fact';  // Replace with your API endpoint\n  apiData: any = {};\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.fetchData();\n    this.fetchData2();\n  }\n\n  fetchData() {\n    console.error('LIBRARY: Api call with angular HTTP Client');\n    this.http.get(this.apiUrl)\n      .subscribe(response => {\n        this.apiData = response;\n        console.error('LIBRARY: Api call with angular HTTP Client success: response ', response);\n      }, error => {\n        console.error('LIBRARY: Error fetching data angular HTTP Client:', error);\n      });\n  }\n\n  fetchData2() {\n    console.error('LIBRARY: Api call with angular axios 3rd party package');\n    get(this.apiUrl)\n.then((response:any) => {\n  console.error('LIBRARY: Api call with angular axios 3rd party package success: response ', response.data);\n})\n.catch((error: HttpErrorResponse) => {\n  console.error('LIBRARY: Error fetching data Api call with angular axios 3rd party package:', error);\n  // Access specific error properties like error.status, error.message, etc.\n});\n}\n}\n","<h1 class=\"my-heading\">Title 02</h1>\n<p class=\"comp\">Component 2: from library - rendered from html template. Make API Calls</p>\n<button class=\"btn\"></button>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Lib02Service {\n\n  constructor() { }\n\n  callService() {\n    console.error(\"Lib02Service - callService method called\");\n  }\n\n  multiply(num:number) {\n    return 21 * num;\n  }\n}\n","/*\n * Public API Surface of my-lib\n */\n\nexport * from './lib/my-lib.component';\nexport * from './lib/lib-02/lib-02.component';\nexport * from './lib/lib-02/lib-02.service';\n// export * from '../lib-style.scss'","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}